<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.17lai.fun//</id><title>夜法之书</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-07-11T11:49:24+08:00</updated> <author> <name>17lai.fun</name> <uri>https://blog.17lai.fun//</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.17lai.fun//feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://blog.17lai.fun//"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 17lai.fun </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</title><link href="https://blog.17lai.fun//posts/%E4%BD%BF%E7%94%A8jeckett,sonarr,iyuu,qt,emby%E6%89%93%E9%80%A0%E5%85%A8%E8%87%AA%E5%8A%A8%E8%BF%BD%E5%89%A7%E6%B5%81%E7%A8%8B/" rel="alternate" type="text/html" title="使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程" /><published>2021-07-09T00:00:00+08:00</published> <updated>2021-07-09T22:40:08+08:00</updated> <id>https://blog.17lai.fun//posts/%E4%BD%BF%E7%94%A8jeckett,sonarr,iyuu,qt,emby%E6%89%93%E9%80%A0%E5%85%A8%E8%87%AA%E5%8A%A8%E8%BF%BD%E5%89%A7%E6%B5%81%E7%A8%8B/</id> <content src="https://blog.17lai.fun//posts/%E4%BD%BF%E7%94%A8jeckett,sonarr,iyuu,qt,emby%E6%89%93%E9%80%A0%E5%85%A8%E8%87%AA%E5%8A%A8%E8%BF%BD%E5%89%A7%E6%B5%81%E7%A8%8B/" /> <author> <name>17lai.fun</name> </author> <category term="Docker" /> <category term="PT" /> <summary> 注意：图床使用sda1，图片显示问题自己解决 jackett 作为种子源，sonarr剧集管理，bt下载，qbittorrent主力下载，使用iyuu转移辅种，emby，jellyfin做海报墙。基本算是完美打通全流程自动追剧。bt种子文件命名规则SxxExx的自动识别下载，国内的资源手动查找下载，自动推送到emby刮削好 硬链接工具导入到新目录，使用TMM刮削 sonarr管理剧集名，查找剧集种子推送到下载工具 剧集管理示例图片 管理剧集目录，剧集日历，提醒你那一天哪些节目播放 自动识别下载对英文剧集支持较好，对于中文资源，结合手动识别下载更佳。 手动识别下载 示例图片 emby海报墙，流媒体中心 emby作为海报墙，元数据查看器，结合tampermonkey js脚本调用外部potplayer播放减少nas服务器压力，并且得到更好解码性能。手机端也... </summary> </entry> <entry><title>破解Gitlab EE</title><link href="https://blog.17lai.fun//posts/%E7%A0%B4%E8%A7%A3Gitlab-EE/" rel="alternate" type="text/html" title="破解Gitlab EE" /><published>2021-05-03T00:00:00+08:00</published> <updated>2021-07-11T11:48:58+08:00</updated> <id>https://blog.17lai.fun//posts/%E7%A0%B4%E8%A7%A3Gitlab-EE/</id> <content src="https://blog.17lai.fun//posts/%E7%A0%B4%E8%A7%A3Gitlab-EE/" /> <author> <name>17lai.fun</name> </author> <category term="Tools" /> <category term="Git" /> <summary> 安装完gitlab ee之后 安装ruby：yum install ruby ruby版本需要2.3或以上。 生成许可证 gem install gitlab-license 创建一个rb文件 license.rb require "openssl" require "gitlab/license" key_pair = OpenSSL::PKey::RSA.generate(2048) File.open("license_key", "w") { |f| f.write(key_pair.to_pem) } public_key = key_pair.public_key File.open("license_key.pub", "w") { |f| f.write(public_key.to_pem) } private_key = OpenSSL:... </summary> </entry> <entry><title>Linux PT硬链接助手</title><link href="https://blog.17lai.fun//posts/Linux-PT%E7%A1%AC%E9%93%BE%E6%8E%A5%E5%8A%A9%E6%89%8B/" rel="alternate" type="text/html" title="Linux PT硬链接助手" /><published>2021-05-03T00:00:00+08:00</published> <updated>2021-05-03T00:00:00+08:00</updated> <id>https://blog.17lai.fun//posts/Linux-PT%E7%A1%AC%E9%93%BE%E6%8E%A5%E5%8A%A9%E6%89%8B/</id> <content src="https://blog.17lai.fun//posts/Linux-PT%E7%A1%AC%E9%93%BE%E6%8E%A5%E5%8A%A9%E6%89%8B/" /> <author> <name>17lai.fun</name> </author> <category term="Blogging" /> <category term="PT" /> <summary> PTtool github地址： appotry/PTtool 硬链接工具 设计目的 方便PT用户硬链接文件，不需要再最大可能情况下节约空间，并保持做种。 小于1M的文件直接复制，方便emby，tmm等工具刮削修改nfo等小文件。 大于1M的文件硬链接到目的目录，可以修改文件名，但是不能修改文件内容！ 例如： /share/Download/src #保存下载的PT文件 /share/Download/dst #保存你自己处理过的视频文件，吧emby，tmm的目录设置到dst下面 下载脚本后chmod +x mklink.sh给与执行权限 使用mklink脚本修改如下，然后直接运行mklink.sh。就可以把src下面的文件全部硬链接到dst目录。mklink适合一次性把源文件夹链接到目的文件夹 SRC="/sh... </summary> </entry> <entry><title>Gitlab的安装及使用</title><link href="https://blog.17lai.fun//posts/Gitlab%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/" rel="alternate" type="text/html" title="Gitlab的安装及使用" /><published>2021-03-03T00:00:00+08:00</published> <updated>2021-03-03T00:00:00+08:00</updated> <id>https://blog.17lai.fun//posts/Gitlab%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</id> <content src="https://blog.17lai.fun//posts/Gitlab%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/" /> <author> <name>17lai.fun</name> </author> <category term="Tools" /> <category term="Gitlab" /> <summary> 1. Gitlab概述 1.1 GitLab介绍 GitLab是利用Ruby on Rails一个开源的版本管理系统，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。 GitLab能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序(Wall)进行交流。 它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找 1.2 Gitlab服务构成 Nginx：静态web服务器。 gitlab-shell：用于处理Git命令和修改authorized keys列表。 gitlab-workhorse: 轻量级的反向代理服务器。 logrotate：日志文件管理工具。 postgresql：数据库。 redis：缓存数据库。 side... </summary> </entry> <entry><title>Github Pages + jekyll 全面介绍极简搭建个人网站和博客</title><link href="https://blog.17lai.fun//posts/Github-Pages-+-jekyll-%E5%85%A8%E9%9D%A2%E4%BB%8B%E7%BB%8D%E6%9E%81%E7%AE%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%92%8C%E5%8D%9A%E5%AE%A2/" rel="alternate" type="text/html" title="Github Pages + jekyll 全面介绍极简搭建个人网站和博客" /><published>2021-03-03T00:00:00+08:00</published> <updated>2021-07-09T22:09:58+08:00</updated> <id>https://blog.17lai.fun//posts/Github-Pages-+-jekyll-%E5%85%A8%E9%9D%A2%E4%BB%8B%E7%BB%8D%E6%9E%81%E7%AE%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%92%8C%E5%8D%9A%E5%AE%A2/</id> <content src="https://blog.17lai.fun//posts/Github-Pages-+-jekyll-%E5%85%A8%E9%9D%A2%E4%BB%8B%E7%BB%8D%E6%9E%81%E7%AE%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%92%8C%E5%8D%9A%E5%AE%A2/" /> <author> <name>17lai.fun</name> </author> <category term="Blogging" /> <category term="GitHub Pages" /> <summary> 注意：图床使用github，图片显示问题自己解决 第一步，建立Github仓库 首先到这里Github，创建一个仓库。 仓库名称有固定的格式： username.github.io，其中username必须是Github账户的用户名（我的是scottcgi），github.io是固定的，这个地址将会成为个人站点的网站地址。另外，我们可以勾选Initialize this repository with a README，让仓库自动创建一个README.md文件，我们用它来做站点的首页（当然也可以不创建，后面自行创建，或是建立index.html也行）。 注意： username如果不是Github账户名，这个仓库就会成为username.github.io的子站点，比如访问地址会是：username.github.io/aaa.github.io。可见，username.... </summary> </entry> </feed>
